note: in this example I am not using a virtualenv, because I am comvinced that it's impossible to install gdal on it.

install postgres

create user wider
create database wider with user wider as owner

install pip

django startproject wazimap_ww

git clone https://github.com/AFRINIC-Labs/WIDER

Erase original wazimap_ww and rename WIDER to wazimap_ww

pip install -r requirements.txt

edit: settings.py, change the directory of the logs, REMEBER TO CHANGE THEM BACK!!!

Edit /ENV/lib/python2.7/site-packages/wazimap/settings.py
  DATABASE_URL = os.environ.get('DATABASE_URL', 'postgresql://wider:your_PASSWORD@localhost/wider')
  DATABASES = {
      'default': dj_database_url.parse(DATABASE_URL),
  }

Connect to postgres db using e.g. pgAdmin3/4
Create table regions and main (using the file ../db_dump/CREATE_TABLE.sql)

comment out wazimap_ww/wazimap_ww/tables.py content

run: wazimap_ww/ python manage.py migrate

populate wazimap_geography table using this command in pgAdmin:

  COPY wazimap_geography (geo_level, geo_code, name, parent_level, parent_code, long_name, version) FROM 'db_dump/data/wazimap-geography.csv' CSV HEADER DELIMITER ',';

Run (in pgAdmin):
  UPDATE wazimap_geography SET version = ''

uncomment out wazimap_ww/wazimap_ww/tables.py content

run: wazimap_ww/python manage.py migrate

let louw know if you have a database error

run: wazimap_ww/python manage.py runserver

edit wazimap_ww/.git/info/exclude

  add:*.pyc and setting.py
